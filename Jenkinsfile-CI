pipeline {
    agent any
    environment {
        DOCKER_USERNAME = "gokulsrepo"    
    }

    stages {
        stage("1. Cleanup") {
            steps {
                deleteDir ()             
            }
        }

        stage ('2. Git Checkout') {
            steps {
                dir ("DevopsProject1"){
                  script {
                    git branch: 'main', url: 'https://github.com/Gokuldevops27/Project-1.git' 
                  }
                }
            }
        }   
        
        stage("3. Maven Unit Test") {  
            steps{
                dir ("DevopsProject1"){
                  sh 'mvn test'        
                }
            }
        }

        stage('4. Maven Build') {
            steps{
                dir ("DevopsProject1"){
                  sh 'mvn clean install'   
                }
            }
        }

        stage("5. Maven Integration Test") {
            steps{
                dir ("DevopsProject1"){
                  sh 'mvn verify'          
                }
            }
        }

        stage('6. Docker Image Build') {
            steps{
                dir('DevopsProject1') {
                    script {
                      def JOB = env.JOB_NAME.toLowerCase()
                      sh "docker build -t ${JOB}:${BUILD_NUMBER} ." 
                    }
                }
            }
        }
        
        stage('7. Docker Image Tag') {
            steps{
                dir('DevopsProject1') {
                  script {
                    def JOB = env.JOB_NAME.toLowerCase()
                    sh "docker tag ${JOB}:${BUILD_NUMBER} ${DOCKER_USERNAME}/${JOB}:v${BUILD_NUMBER}"
                    sh "docker tag ${JOB}:${BUILD_NUMBER} ${DOCKER_USERNAME}/${JOB}:latest"
                  }
                }
            } 
        }

        stage('8. Docker Image Push') {
            steps{
                script { 
                  withCredentials([usernamePassword(credentialsId: 'dockerhub_cred', usernameVariable: 'docker_user', passwordVariable: 'docker_pass')]) {
                    sh "docker login -u '${docker_user}' -p '${docker_pass}'"
                    def JOB = env.JOB_NAME.toLowerCase()
                    sh "docker push ${DOCKER_USERNAME}/${JOB}:v${BUILD_NUMBER}"
                    sh "docker push ${DOCKER_USERNAME}/${JOB}:latest"
                  }
                }
            }
        }

        stage('9. Docker Image Cleanup') {
            steps{
                script { 
                  sh "docker image prune -af"
                }
            }
        }
    }
}
